{
  "htmlElements": {
    "tags": [
      "a",
      "article",
      "aside",
      "body",
      "button",
      "code",
      "details",
      "div",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "head",
      "header",
      "hr",
      "html",
      "img",
      "input",
      "label",
      "li",
      "link",
      "main",
      "meta",
      "nav",
      "noscript",
      "ol",
      "p",
      "pre",
      "script",
      "span",
      "strong",
      "style",
      "summary",
      "table",
      "tbody",
      "td",
      "th",
      "thead",
      "title",
      "tr",
      "ul"
    ],
    "classes": [
      "action-btn",
      "active",
      "align-center",
      "anchor",
      "book-article",
      "book-brand",
      "book-comments",
      "book-footer",
      "book-header",
      "book-icon",
      "book-menu",
      "book-menu-content",
      "book-menu-overlay",
      "book-page",
      "book-search",
      "book-search-spinner",
      "book-section-flat",
      "book-toc",
      "book-toc-content",
      "button-group",
      "card",
      "checkbox",
      "clearfix",
      "container",
      "dashboard-cards",
      "dashboard-container",
      "dashboard-content",
      "dashboard-header",
      "dsq-brlink",
      "error-message",
      "flex",
      "flex-wrap",
      "form-group",
      "hidden",
      "highlight",
      "justify-between",
      "justify-center",
      "login",
      "login-container",
      "logo-disqus",
      "logout",
      "markdown",
      "message",
      "not-found",
      "progress-bar",
      "sign-out-btn",
      "social-login",
      "task-list",
      "text-button",
      "toggle",
      "user-actions",
      "user-button",
      "user-info",
      "user-info-card",
      "user-info-container",
      "user-name"
    ],
    "ids": [
      "1-adjacency-matrix",
      "1-bottom-up-heap-construction",
      "1-chaining",
      "1-choosing-the-pivot",
      "1-inorder-traversal-left-root-right",
      "1-insertion",
      "1-morris-traversal",
      "1-multisets",
      "1-o1---constant-time",
      "1-recursive-binary-search",
      "1-removing-duplicates",
      "1-reversing-a-linked-list",
      "1-union",
      "1-using-insertion-sort-for-small-subarrays",
      "2-adjacency-list",
      "2-avoiding-unnecessary-copying",
      "2-detecting-a-cycle-in-a-linked-list",
      "2-finding-the-first-occurrence",
      "2-finding-unique-elements",
      "2-frozen-sets",
      "2-handling-small-subarrays",
      "2-heap-optimization-for-small-arrays",
      "2-intersection",
      "2-on---linear-time",
      "2-open-addressing",
      "2-preorder-traversal-root-left-right",
      "2-search",
      "2-threaded-binary-tree-traversal",
      "3-deletion",
      "3-difference",
      "3-edge-list",
      "3-finding-the-last-occurrence",
      "3-finding-the-middle-node",
      "3-integration-with-main-curriculum",
      "3-on2---quadratic-time",
      "3-postorder-traversal-left-right-root",
      "3-set-cover-problem",
      "4-finding-the-floor-and-ceiling",
      "4-graph-algorithms",
      "4-incidence-matrix",
      "4-merging-two-sorted-linked-lists",
      "4-practical-examples",
      "4-symmetric-difference",
      "5-mini-projects",
      "5-removing-nth-node-from-end",
      "5-search-in-rotated-sorted-array",
      "6-flattening-a-multilevel-doubly-linked-list",
      "TableOfContents",
      "about-60-days-of-coding-algorithm-challenge",
      "about-the-creator",
      "account-created",
      "activity-selection-problem",
      "advanced-heap-variants",
      "advanced-linked-list-operations-and-problems",
      "advanced-matrix-exponentiation",
      "advanced-set-concepts",
      "advanced-sorting-algorithms---insertion-sort-and-merge-sort",
      "advanced-traversal-techniques",
      "advantages",
      "advantages-and-disadvantages",
      "advantages-and-disadvantages-of-quicksort",
      "advantages-of-dijkstras-algorithm",
      "advantages-of-doubly-linked-lists",
      "advantages-of-dynamic-programming",
      "advantages-of-greedy-algorithms",
      "advantages-of-heapsort",
      "advantages-of-huffman-coding",
      "advantages-of-kruskals-algorithm",
      "advantages-of-linked-lists",
      "advantages-of-mergesort",
      "advantages-of-prims-algorithm",
      "algorithm",
      "algorithm-1",
      "algorithmic-thinking-and-pseudocode",
      "applications",
      "applications-of-bfs",
      "applications-of-binary-search",
      "applications-of-binary-search-trees",
      "applications-of-binary-trees",
      "applications-of-dfs",
      "applications-of-edit-distance",
      "applications-of-floyd-warshall-algorithm",
      "applications-of-graphs",
      "applications-of-hash-tables",
      "applications-of-heaps-and-priority-queues",
      "applications-of-heapsort",
      "applications-of-lcs",
      "applications-of-lis",
      "applications-of-matrix-chain-multiplication",
      "applications-of-mergesort",
      "applications-of-minimum-spanning-trees",
      "applications-of-palindrome-partitioning",
      "applications-of-queues",
      "applications-of-quicksort",
      "applications-of-sets",
      "applications-of-stacks",
      "applications-of-the-coin-change-problem",
      "applications-of-the-knapsack-problem",
      "applications-of-the-rod-cutting-problem",
      "applications-of-tree-traversals",
      "applications-of-trees",
      "approaches-to-dynamic-programming",
      "auth-form",
      "balancing-binary-search-trees",
      "basic-binary-search",
      "basic-graph-operations",
      "basic-graph-terminology",
      "basic-implementation-of-mergesort",
      "basic-implementation-of-quicksort",
      "basic-operations",
      "basic-operations-explained",
      "basic-operations-of-a-queue",
      "basic-operations-of-a-stack",
      "basic-operations-on-a-linked-list",
      "basic-pseudocode-conventions",
      "basic-structure-of-a-linked-list",
      "basic-terminology",
      "bellman-ford-algorithm",
      "benefits-of-pseudocode",
      "big-o-notation",
      "binary-search-and-its-variations",
      "binary-search-trees",
      "binary-tree-traversals",
      "binary-trees",
      "book-search-input",
      "book-search-results",
      "bottom-up-approach-tabulation",
      "bottom-up-tabulation",
      "breadth-first-search-bfs",
      "breadth-first-search-bfs-traversal",
      "bst-operations",
      "bubble-sort",
      "challenge-completion",
      "challenge-overview",
      "choosing-the-right-representation",
      "classic-dp-problem-longest-common-subsequence-lcs",
      "coin-change-problem",
      "collision-resolution-techniques",
      "common-big-o-notations",
      "common-binary-tree-operations",
      "common-greedy-algorithms",
      "common-interview-questions",
      "common-operations-on-2d-arrays",
      "comparing-singly-and-doubly-linked-lists",
      "comparison-of-approaches",
      "comparison-of-bfs-and-dfs",
      "comparison-of-dijkstras-and-bellman-ford-algorithms",
      "comparison-of-insertion-sort-and-merge-sort",
      "comparison-of-kruskals-and-prims-algorithms",
      "comparison-of-sorting-algorithms",
      "comparison-with-kruskals-algorithm",
      "comparison-with-other-sorting-algorithms",
      "comparison-with-prims-algorithm",
      "comparison-with-quicksort",
      "completion-status",
      "conclusion",
      "cons",
      "cons-1",
      "cons-2",
      "cons-3",
      "control-structures",
      "create-account-button",
      "dashboard-sign-out-button",
      "dashboard-user-info",
      "day-3-introduction-to-time-complexity",
      "day-30-introduction-to-dynamic-programming",
      "day-4-introduction-to-arrays",
      "day-40-introduction-to-greedy-algorithms",
      "day-44-prims-algorithm",
      "day-45-kruskals-algorithm",
      "day-46-floyd-warshall-algorithm",
      "day-47-bellman-ford-algorithm",
      "day-48-introduction-to-backtracking",
      "day-49-n-queens-problem",
      "day-5-multi-dimensional-arrays-and-sorting-algorithms",
      "day-50-sudoku-solver",
      "day-51-hamiltonian-cycle",
      "day-52-graph-coloring-problem",
      "day-53-bit-manipulation-techniques",
      "day-54-generating-power-set-using-bit-manipulation",
      "day-55-counting-bits-and-bit-hacks",
      "day-56-string-algorithms---kmp-algorithm",
      "day-57-rabin-karp-algorithm",
      "day-58-tries-and-their-applications",
      "day-59-advanced-tree-structures-avl-red-black-trees",
      "day-60-competitive-programming-techniques-and-wrap-up",
      "days-completed",
      "depth-first-search-dfs",
      "depth-first-search-dfs-traversals",
      "detecting-negative-cycles",
      "dijkstras-algorithm",
      "disadvantages",
      "disadvantages-of-doubly-linked-lists",
      "disadvantages-of-dynamic-programming",
      "disadvantages-of-greedy-algorithms",
      "disadvantages-of-heapsort",
      "disadvantages-of-linked-lists",
      "disadvantages-of-mergesort",
      "disqus_thread",
      "doubly-linked-lists---implementation-and-comparison",
      "dynamic-programming-approach",
      "dynamic-programming-approach-1",
      "dynamic-programming-approaches",
      "edit-distance-problem",
      "email",
      "email-error",
      "example",
      "example-1",
      "example-2d-array-matrix",
      "example-activity-selection-problem",
      "example-balanced-parentheses",
      "example-coin-change-problem-greedy-approach",
      "example-fibonacci-sequence",
      "example-finding-the-largest-number",
      "example-implementing-basic-array-operations",
      "example-level-order-traversal-of-a-binary-tree",
      "example-simple-addition-algorithm",
      "example-simple-singly-linked-list-implementation",
      "example-usage",
      "examples-of-time-complexities",
      "exercise",
      "fibonacci-sequence-and-dynamic-programming",
      "floyd-warshall-algorithm",
      "functions",
      "google-sign-in",
      "graph-representations",
      "graph-traversal-algorithms",
      "graph-traversals---bfs-and-dfs",
      "greedy-approach",
      "hash-functions",
      "hash-tables",
      "heaps-and-priority-queues",
      "heapsort",
      "heapsort-algorithm",
      "hints",
      "how-dijkstras-algorithm-works",
      "how-does-it-work",
      "how-hash-tables-work",
      "how-heapsort-works",
      "how-huffman-coding-works",
      "how-it-works",
      "how-it-works-1",
      "how-kruskals-algorithm-works",
      "how-mergesort-works",
      "how-prims-algorithm-works",
      "how-quicksort-works",
      "how-to-analyze-time-complexity",
      "how-to-participate",
      "huffman-coding",
      "implementation",
      "implementation-1",
      "implementation-2",
      "implementation-3",
      "implementing-a-basic-tree-in-python",
      "implementing-a-binary-heap-in-python",
      "implementing-a-binary-search-tree-in-python",
      "implementing-a-binary-tree-in-python",
      "implementing-a-doubly-linked-list",
      "implementing-a-hash-table-with-chaining",
      "implementing-a-queue-in-python",
      "implementing-a-singly-linked-list",
      "implementing-a-stack-in-python",
      "implementing-floyd-warshall-algorithm",
      "implementing-heapsort",
      "implementing-priority-queue-using-heap",
      "implementing-sets-in-python",
      "in-place-mergesort-implementation",
      "in-place-quicksort-implementation",
      "insertion-sort",
      "introduction-to-algorithms",
      "introduction-to-binary-search",
      "introduction-to-graph-traversals",
      "introduction-to-graphs",
      "introduction-to-heapsort",
      "introduction-to-linked-lists",
      "introduction-to-mergesort",
      "introduction-to-minimum-spanning-trees",
      "introduction-to-pseudocode",
      "introduction-to-python",
      "introduction-to-queues",
      "introduction-to-quicksort",
      "introduction-to-sets",
      "introduction-to-shortest-path-problems",
      "introduction-to-sorting-algorithms",
      "introduction-to-stacks",
      "introduction-to-trees",
      "iterative-approach",
      "iterative-approach-1",
      "iterative-approach-2",
      "key-characteristics",
      "key-characteristics-of-algorithms",
      "key-characteristics-of-dynamic-programming-problems",
      "key-characteristics-of-greedy-algorithms",
      "key-points",
      "kruskals-algorithm",
      "last-login",
      "level-order-traversal",
      "level-order-traversal-breadth-first-search",
      "limitations",
      "lists-and-dictionaries",
      "load-factor-and-resizing",
      "login-button",
      "logout-button",
      "longest-common-subsequence-lcs",
      "longest-increasing-subsequence-lis",
      "mark-complete-btn",
      "master-algorithms-in-60-days-your-path-to-coding-excellence",
      "matrix-chain-multiplication",
      "menu-control",
      "merge-sort",
      "mergesort",
      "mergesort-algorithm",
      "message",
      "minimum-spanning-trees",
      "multi-dimensional-arrays",
      "naive-recursive-approach",
      "object-oriented-programming-basics",
      "optimizations-for-heapsort",
      "optimizations-for-mergesort",
      "optimizations-for-quicksort",
      "optimized-solution-manachers-algorithm",
      "optimized-solution-using-binary-search",
      "our-mission",
      "overview-of-graph-representations",
      "overview-of-sorting-algorithms",
      "palindrome-partitioning",
      "password",
      "password-error",
      "performance-analysis",
      "practical-considerations",
      "prims-algorithm",
      "printing-the-coin-combination",
      "printing-the-edits",
      "printing-the-longest-common-subsequence",
      "printing-the-longest-increasing-subsequence",
      "printing-the-optimal-cuts",
      "printing-the-optimal-parenthesization",
      "printing-the-selected-items",
      "priority-queue",
      "prizes-and-recognition",
      "problem-statement",
      "problem-statement-1",
      "progress-fill",
      "proof-of-correctness",
      "properties-of-a-tree",
      "properties-of-arrays",
      "properties-of-binary-trees",
      "pros",
      "pros-1",
      "pros-2",
      "pros-3",
      "python-basics-integration-plan",
      "questions-to-consider",
      "quicksort",
      "quicksort-algorithm",
      "real-world-applications",
      "reconstructing-paths",
      "recursive-approach",
      "recursive-approach-1",
      "recursive-approach-2",
      "remember-me",
      "reset-password-button",
      "resources",
      "rod-cutting-problem",
      "rules-and-guidelines",
      "selection-sort",
      "set-operations",
      "sets-and-their-applications",
      "shortest-path-algorithms",
      "sign-in-button",
      "singly-linked-list-structure",
      "singly-linked-lists---implementation-and-basic-operations",
      "space-complexity",
      "space-complexity-1",
      "space-complexity-comparison",
      "space-optimized-bottom-up-approach",
      "space-optimized-solution",
      "summary",
      "task-list",
      "the-fibonacci-sequence",
      "the-knapsack-problem",
      "the-problem-solving-process",
      "time-and-space-complexity",
      "time-complexity",
      "time-complexity-1",
      "time-complexity-analysis",
      "time-complexity-comparison",
      "time-complexity-of-heap-operations",
      "time-complexity-of-set-operations",
      "toc-control",
      "top-down-approach-memoization",
      "top-down-memoization",
      "tree-traversal-techniques",
      "tree-traversals",
      "types-of-binary-trees",
      "types-of-graphs",
      "types-of-heaps",
      "types-of-linked-lists",
      "types-of-tree-traversals",
      "types-of-trees",
      "update-profile-btn",
      "user-info",
      "user-name",
      "using-a-custom-node-class",
      "using-a-python-list",
      "variables-and-data-types",
      "variation-1-number-of-ways-to-make-change",
      "variation-2-minimum-number-of-coins",
      "variations-and-optimizations",
      "variations-of-binary-search",
      "variations-of-the-problem",
      "verify-email-btn",
      "week-by-week-breakdown",
      "weeks-1-2-foundations",
      "weeks-11-12-advanced-topics",
      "weeks-3-4-data-structures-i",
      "weeks-5-6-searching-and-sorting",
      "weeks-7-8-data-structures-ii",
      "weeks-9-10-dynamic-programming",
      "what-are-greedy-algorithms",
      "what-is-a-binary-search-tree",
      "what-is-a-binary-tree",
      "what-is-a-doubly-linked-list",
      "what-is-a-graph",
      "what-is-a-hash-table",
      "what-is-a-heap",
      "what-is-a-linked-list",
      "what-is-a-queue",
      "what-is-a-stack",
      "what-is-a-tree",
      "what-is-algorithmic-thinking",
      "what-is-an-algorithm",
      "what-is-an-array",
      "what-is-dijkstras-algorithm",
      "what-is-dynamic-programming",
      "what-is-huffman-coding",
      "what-is-kruskals-algorithm",
      "what-is-matrix-chain-multiplication",
      "what-is-palindrome-partitioning",
      "what-is-prims-algorithm",
      "what-is-the-activity-selection-problem",
      "what-is-the-coin-change-problem",
      "what-is-the-edit-distance-problem",
      "what-is-the-floyd-warshall-algorithm",
      "what-is-the-knapsack-problem",
      "what-is-the-longest-common-subsequence",
      "what-is-the-longest-increasing-subsequence",
      "what-is-the-rod-cutting-problem",
      "what-is-time-complexity",
      "what-to-expect",
      "when-to-use-dynamic-programming",
      "when-to-use-each-algorithm",
      "when-to-use-greedy-algorithms",
      "who-is-this-for",
      "why-are-algorithms-important",
      "why-is-this-important",
      "why-is-time-complexity-important"
    ]
  }
}
